plugins {
    id 'eclipse'
    id 'maven-publish'
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'java'

group = 'cx.rain.synccraft' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'synccraft'
version = '1.19.2-2.0.0'

if (System.getenv("JITPACK") == "true") {
    version += "-${System.getenv("GIT_BRANCH")}"
    version += "-${System.getenv("GIT_COMMIT")}"
}

var release = false
if (release || project.hasProperty("SC_RELEASE")) {
    version += '-release'
} else {
    version += '-dev'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

allprojects {
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'dev.architectury.loom'

    architectury {
        platformSetupLoomIde()
        forge()
    }

    loom {
        silentMojangMappingsLicense()

        forge {
            dataGen {
                mod 'synccraft'
            }
        }

        launches {
            data {
                arg "--existing", file("src/main/resources").absolutePath
            }
        }
    }

    sourceSets.main.resources {
        srcDir 'src/generated/resources'
    }

    processResources {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    repositories {
        maven {
            name = 'Jitpack'
            url = 'https://jitpack.io'
        }

        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }

        flatDir {
            dir 'libs'
        }
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    dependencies {
        minecraft "com.mojang:minecraft:1.19.2"
        forge "net.minecraftforge:forge:1.19.2-43.1.15"

        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.19.2:2022.08.28@zip")
        }
    }

    jar {
        manifest {
            attributes([
                    "Specification-Title"     : "synccraft",
                    "Specification-Vendor"    : "qyl27",
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : "qyl27",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url "file://${project.projectDir}/mcmodsrepo"
            }
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
}

configurations {
    library
    implementation.extendsFrom library
}

dependencies {
    library project(":sync"), {
        transitive = false
    }
}

shadowJar {
    dependencies {
        include project(":sync")
    }
}

jar.finalizedBy('shadowJar')

import org.apache.tools.ant.filters.ReplaceTokens

task injectString(type: Copy) {
    from ('src/main/java') {
        include '**/*.java'
        filter(ReplaceTokens, tokens: [version: project.version])
    }
    into "${buildDir}/generated/java"
}

// qyl27: It only works with main.
compileJava.source = "${buildDir}/generated/java"
compileJava.dependsOn injectString
